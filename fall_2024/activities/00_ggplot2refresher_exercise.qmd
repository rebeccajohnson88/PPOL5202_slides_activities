---
title: "ggplot2refresher"
format: html
editor: visual
execute: 
  warning: false
  message: false
---

# Exploratory Data Analysis

We'll practice various data preparation/plotting tasks for exploratory data analysis (EDA).

## Exercise 1: labeled violin plot for child poverty rates

-   Load ggplot2 and tidyverse

-   Load the `midwest` data from the ggplot2 package

-   Produce a violin plot similar to the lecture slide example of the distribution of child poverty rates (`percchildbelowpovert`) for metro and non-metro counties but adding:

    -   A label with the county + state + poverty rate for the highest child poverty rate counties in each group (so one for metro areas; another for non-metro areas)
    -   A label with the county + state + poverty rate for the lowest child poverty rate counties in each group

*Hint on finding max/min counties by group*: https://stackoverflow.com/questions/24237399/how-to-select-the-rows-with-maximum-values-in-each-group-with-dplyr

*Bonus 1*: also add a text note with the county at / closest to the median poverty rate for each group

*Bonus 2*: repeat the exercise but include the facetting by state

```{r}
library(ggplot2)
library(tidyverse)
head(midwest)
summary(midwest$percchildbelowpovert)

midwest <- midwest %>% mutate(metro_status = ifelse(inmetro == 1, "Metro", "Non-Metro"))

# find the county with the highest and lowest metro and non_metro rate
highest_metro <- midwest %>% filter(metro_status == "Metro") %>% 
  slice(which.max(percchildbelowpovert))

highest_non_metro <- midwest %>% filter(metro_status == "Non-Metro") %>% 
  slice(which.max(percchildbelowpovert))

lowest_metro <- midwest %>% filter(metro_status == "Metro") %>% 
  slice(which.min(percchildbelowpovert))

lowest_non_metro <- midwest %>% filter(metro_status == "Non-Metro") %>% 
  slice(which.min(percchildbelowpovert))

violin_plot <- ggplot(midwest, aes(x = metro_status, y = percchildbelowpovert, fill = metro_status)) +
  geom_violin(trim = FALSE) +
  geom_jitter(width = 0.2, alpha = 0.4)

# Add labels for the highest and lowest child poverty rate counties
p + 
  geom_text(data = highest_metro, aes(label = paste(county, state, round(percchildbelowpovert, 1), sep = ", ")),
              vjust = -1, color = "red") +
  geom_text(data = highest_non_metro, aes(label = paste(county, state, round(percchildbelowpovert, 1), sep = ", ")),
            vjust = -1, color = "red") +
  geom_text(data = lowest_metro, aes(label = paste(county, state, round(percchildbelowpovert, 1), sep = ", ")),
              vjust = 1, color = "blue") +
  geom_text(data = lowest_non_metro, aes(label = paste(county, state, round(percchildbelowpovert, 1), sep = ", ")),
            vjust = 1, color = "blue") +
  scale_fill_manual(values = c("Metro" = "#FF9999", "Non-Metro" = "#9999FF")) +
  theme(legend.position = "none")


```

## Exercise 2: alluvial flow diagram for hate crimes in DC

-   Load the Hate Crimes open data file from DC's Metropolitan Police Department

-   Filter to the following type of hate crimes (as the sole coding; ignore ones that are multiple coded and feel free to ignore typos)

    -   Ethnicity/National Origin
    -   Religion
    -   Race

-   Create an alluvial flow chart where the left hand panel has the count of each different `Type of Hate Bias` and the right hand panel has flows into different `Targeted Groups`

-   If it makes it easier to interpret, you can filter to the top 10-20 most frequent types of crimes/targets

*Hint*: you'll want to do some aggregation to get counts before

*Resource*: https://cran.r-project.org/web/packages/ggalluvial/vignettes/ggalluvial.html

```{r}
library(openxlsx)
library(ggalluvial)

hc <- read.xlsx("https://mpdc.dc.gov/sites/default/files/dc/sites/mpdc/publication/attachments/Hate%20Crimes%20Open%20Data_16.xlsx")

hc_filtered <- hc %>% filter(Type.of.Hate.Bias %in% c("Ethnicity/National Origin", "Religion", "Race")) %>% filter(!grepl("/", Type.of.Hate.Bias))

aggregate_data <- hc_filtered %>% group_by(Type.of.Hate.Bias, Targeted.Group) %>%
  summarise(Count = n()) %>%
  arrange(desc(Count))

aggregate_data_top <- aggregate_data %>% top_n(20, count)

ggplot(aggregate_data_top, aes(axis1 = Type.of.Hate.Bias, axis2 = Targeted.Group, y = Count)) +
  geom_alluvium(aes(fill = Type.of.Hate.Bias)) +
  geom_stratum() +
  geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
  scale_x_discrete(limits = c("Type of Hate Bias", "Targeted Group")) +
  labs(title = "Alluvial Flow Diagram for Hate Crimes in DC",
       x = "Hate Bias Type and Targeted Groups",
       y = "Count of Hate Crimes") +
  theme_minimal() +
  theme(legend.position = "bottom")
```

## Exercise 3: square area chart

-   Create a square area chart to compare two counties in Illinois in the `midwest` data:

    -   The county with the highest poverty rate

    -   The county with the lowest poverty rate

-   The square area chart should have 100 cells and color cells red to represent the count of children in poverty out of 100 (the rounded percentage) -- eg if the poverty rate is 31\\%, 31 out of the 100 squares should be red

-   *Hint*: you may want to use `geom_tile()`

```{r}


```
